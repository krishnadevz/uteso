{"version":3,"sources":["components/Jumborton.js","components/social.js","components/projects.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Jumborton","className","Jumbotron","href","target","rel","Button","variant","Social","style","textAlign","class","projects","Card","width","Body","Title","Subtitle","Text","Link","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kQA4BeA,MAxBf,WACE,OACE,yBAAKC,UAAU,OACf,kBAACC,EAAA,EAAD,KACJ,8BAAM,wFACN,8BAAM,uBAAGD,UAAU,SAAb,6TAGN,uBAAGE,KAAK,iCAAiCC,OAAO,SAASC,IAAI,uBAAuB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAON,UAAU,OAAjC,WAH9E,yFAKN,uBAAGE,KAAK,+BAA+BC,OAAO,UAAS,kBAACE,EAAA,EAAD,CAAQC,QAAQ,OAAON,UAAU,OAAjC,WALjD,2CAMwB,uBAAGE,KAAK,wDAAwDE,IAAI,sBAAuBD,OAAO,UAAS,kBAACE,EAAA,EAAD,CAAQC,QAAQ,OAAON,UAAU,OAAjC,aANnI,qCAOkB,uBAAGE,KAAK,iDAAiDE,IAAI,sBAAsBD,OAAO,UAAS,kBAACE,EAAA,EAAD,CAAQC,QAAQ,OAAON,UAAU,OAAjC,UAC3H,2BAAG,6BAAH,iGARM,sBAUF,uBAAGE,KAAK,sCAAsCE,IAAI,sBAAsBD,OAAO,UAAS,kBAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUN,UAAU,OAApC,cACjF,6BACX,2BACA,uBAAGE,KAAK,8CAA8CE,IAAI,sBAAuBD,OAAO,UAAS,kBAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUN,UAAU,OAApC,eCFlFO,MAnBf,WAEQ,OACI,6BACA,uBAAGC,MAAO,CAACC,UAAU,WAArB,mBACI,yBAAKC,MAAM,gBACvB,uBAAGP,OAAO,SAASD,KAAK,iCAAiCQ,MAAM,UAAS,uBAAGA,MAAM,mBACjF,uBAAGP,OAAO,SAASD,KAAK,kCAAkCQ,MAAM,UAAS,uBAAGA,MAAM,oBAClF,uBAAGP,OAAO,SAASD,KAAK,+BAA+BQ,MAAM,UAAS,uBAAGA,MAAM,gBAC/E,uBAAGP,OAAO,SAASD,KAAK,yDAAyDQ,MAAM,UAAS,uBAAGA,MAAM,2BACzG,uBAAGP,OAAO,SAASD,KAAK,wDAAwDQ,MAAM,UAAS,uBAAGA,MAAM,qBACxG,uBAAGP,OAAO,SAASD,KAAK,oCAAmCQ,MAAM,UAAS,uBAAGA,MAAM,mBACnF,uBAAGP,OAAO,SAASD,KAAK,iDAAgDQ,MAAM,UAAS,uBAAGA,MAAM,qB,OCmBrFC,MA9Bd,WACG,OACI,yBAAKX,UAAU,YACb,8DACE,kBAACY,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,SAAUb,UAAU,YAEpD,kBAACY,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,0BACA,kBAACH,EAAA,EAAKI,SAAN,CAAehB,UAAU,mBAAzB,sBACA,kBAACY,EAAA,EAAKK,KAAN,uFAGA,kBAACL,EAAA,EAAKM,KAAN,CAAWhB,KAAK,iDAAhB,eACA,kBAACU,EAAA,EAAKM,KAAN,CAAWhB,KAAK,kCAAhB,kBAGJ,kBAACU,EAAA,EAAD,CAAMJ,MAAO,CAAEK,MAAO,SAAWb,UAAU,YAC/B,gDACV,kBAACY,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,SAAN,CAAehB,UAAU,oBAAzB,eACA,kBAACY,EAAA,EAAKK,KAAN,sGAGA,kBAACL,EAAA,EAAKM,KAAN,CAAWhB,KAAK,8CAAhB,mBCjBWiB,MAPd,WACG,OACI,yBAAKnB,UAAU,UACV,kGCeEoB,MAXf,WACE,OACE,yBAAKpB,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHgBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.91290b7c.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport React, { Component } from 'react'\r\n\r\nfunction Jumborton() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Jumbotron>\r\n<span><h1>Hello, I'm Krishna!üê±‚Äçüíª‚öô</h1></span>\r\n<span><p className=\"about\">\r\nI'm Third Year CSE undergrad student My Passion is For Computers in all kind of Perspectives .I am Learning FullStack Developer(MERNüß±) \r\nand i also like to Contribute opensource projects üëâüîß.I buid ‚öô things/Projects related to Web Devlopment/FrameWorks(React‚ù§)üëâOn\r\n<a href=\"https://github.com/krishnadevz\" target=\"_blank\" rel=\"noopener noreferrer\" ><Button variant=\"dark\" className=\"btn\">Github</Button></a>\r\nI also write things about web Development and reactjs Crossed 7.5K+ViewsüëâOn \r\n<a href=\"https://dev.to/krishnakakade\" target=\"_blank\"><Button variant=\"dark\" className=\"btn\">Dev.to</Button></a>\r\nConnect me Professionally üëâOn<a href=\"https://www.linkedin.com/in/krishna-kakade-014a70149/\" rel=\"noopener noreferrer\"  target=\"_blank\"><Button variant=\"dark\" className=\"btn\">LinkedIn</Button></a>\r\nI Crossed 9.1K ViewsüëâOn<a href=\"https://www.quora.com/profile/Krishna-Kakade-2\" rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"dark\" className=\"btn\">Quora</Button></a>\r\n<b><br></br>\r\n.I Spend Most of My time With üíªüñ±Thank Youüê±‚Äçüèç</b>\r\nü•õ‚ù§ <a href=\"https://www.twitter.com/krishnadevz\" rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"primary\" className=\"btn\">Twitter</Button></a>\r\n</p></span><br></br>\r\n<p>\r\n<a href=\"https://gitconnected.com/krishnadevz/resume\" rel=\"noopener noreferrer\"  target=\"_blank\"><Button variant=\"primary\" className=\"btn\">Resume</Button></a>\r\n</p>\r\n</Jumbotron>\r\n    </div>\r\n  );\r\n}\r\nexport default Jumborton;","import React, { Component } from 'react'\r\nfunction Social(){\r\n \r\n        return (\r\n            <div>\r\n            <b style={{textAlign:\"center\"}}>Conatct Section</b>\r\n                <div class=\"icons-social\">\r\n    <a target=\"_blank\" href=\"https://github.com/krishnadevz\" class=\"github\"><i class=\"fab fa-github\"></i></a>\r\n    <a target=\"_blank\" href=\"https://twitter.com/krishnadevz\" class=\"github\"><i class=\"fab fa-twitter\"></i></a>\r\n    <a target=\"_blank\" href=\"https://dev.to/krishnakakade\" class=\"github\"><i class=\"fab fa-dev\"></i></a>\r\n    <a target=\"_blank\" href=\"https://stackoverflow.com/users/8926157/krishna-kakade\" class=\"github\"><i class=\"fab fa-stack-overflow\"></i></a>\r\n    <a target=\"_blank\" href=\"https://www.linkedin.com/in/krishna-kakade-014a70149/\" class=\"github\"><i class=\"fab fa-linkedin\"></i></a>\r\n    <a target=\"_blank\" href=\"https://medium.com/@krishnakakade\"class=\"github\"><i class=\"fab fa-medium\" ></i></a>\r\n    <a target=\"_blank\" href=\"https://www.quora.com/profile/Krishna-Kakade-2\"class=\"github\"><i class=\"fab fa-quora\" ></i></a>\r\n\r\n  </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Social;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n function projects() {\r\n    return (\r\n        <div className=\"projects\"> \r\n          <b>Projects Section More On Github</b>\r\n            <Card style={{ width: '18rem'}} className=\"projects\">\r\n         \r\n  <Card.Body>\r\n    <Card.Title>Reactjs Portfolio</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">Portfolio In React</Card.Subtitle>\r\n    <Card.Text>\r\ni created portfolio in react you can use it for yours otherwise check it out .\r\n    </Card.Text>\r\n    <Card.Link href=\"https://github.com/krishnadevz/ReactPortfolio\">Github Repo</Card.Link>\r\n    <Card.Link href=\"https://npmiam.firebaseapp.com\">Live Preview</Card.Link>\r\n  </Card.Body>\r\n</Card>\r\n<Card style={{ width: '18rem' }} className=\"projects\">\r\n            <b>Projects Section2</b>\r\n  <Card.Body >\r\n    <Card.Title>React</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted \">ReactThings</Card.Subtitle>\r\n    <Card.Text>\r\n   This Repository includes my basic practice Scripts and some basic projects related to Reactjs\r\n    </Card.Text>\r\n    <Card.Link href=\"https://github.com/krishnadevz/ReactThings\">Github Repo</Card.Link>\r\n  </Card.Body>\r\n</Card>\r\n        </div>\r\n    )\r\n}\r\nexport default projects;","import React from 'react'\r\n\r\n function footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n             <b>&copy;by Krishna kakade 2020 Opensourced Under MIT LICENSE ReactApp</b>\r\n        </div>\r\n    )\r\n}\r\nexport default footer;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './App.css';\nimport Jumborton from './components/Jumborton';\nimport Social from \"./components/social\";\nimport Projects from \"./components/projects\";\nimport Footer from \"./components/footer\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Jumborton/>\n    <Projects/>\n    <Social/>\n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}